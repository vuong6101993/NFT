import { Button, Col, Form, Input, Layout, Row, Select, Upload } from "antd";
import AppraisalRequestWrapper from "./styles";
const { Content, Footer, Sider } = Layout;
import useTranslation from "@/hooks/useTranslation";
import Head from "next/head";
import Header from "@/components/Header";
import { useState } from "react";
import { PictureOutlined } from "@ant-design/icons";

const AppraisalRequest = () => {
  const [imageUrl, setImageUrl] = useState<string>();
  const { TextArea } = Input;

  const translation = useTranslation();
  const uploadButton = (
    <div className="w-[80px] h-[62px] upload-button">
      <PictureOutlined />
    </div>
  );
  return (
    <>
      <Head>
        <title>NFT Art Marketplace ZEZI</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout style={{ minHeight: "100vh", background: "#fff" }}>
        <Header />
        <Content className="relative">
          <AppraisalRequestWrapper>
            <h1 className="absolute top-[40px] left-[70px] text-black	text-2xl font-bold ">
              Create new NFT
            </h1>
            <Form layout="vertical">
              <Form.Item
                className="file-upload"
                name="file-upload"
                label={
                  <div>
                    <label className="relative">
                      Image, Video, Audio, or 3D Model{" "}
                      <span className="text-[#FE3131]">*</span>
                    </label>
                    <span className="block text-[14px] font-[400]">
                      File types supported: JPG, PNG, GIF, SVG, MP4, WEBM, MP3,
                      WAV, OGG, GLB, GLTF. Max size: 100 MB
                    </span>
                  </div>
                }
                required={true}
                rules={[{ required: true }]}
              >
                <Upload
                  name="avatar"
                  listType="picture-card"
                  className="avatar-uploader"
                  showUploadList={false}
                  // beforeUpload={beforeUpload}
                  // onChange={handleChange}
                >
                  {uploadButton}
                </Upload>
              </Form.Item>
              <Form.Item
                name="name"
                label="Name"
                required={true}
                rules={[
                  { required: true },
                  { type: "string", warningOnly: true },
                ]}
              >
                <Input placeholder="Item name" />
              </Form.Item>

              <Form.Item
                name="link"
                label={
                  <div>
                    <label className="relative">External link</label>
                    <span className="block text-[14px] font-[400]">
                      NFT Art Marketplace ZEZI will include a link to this URL
                      on this item&#39;s detail page, so that users can click to
                      learn more about it. You are welcome to link to your own
                      webpage with more details.
                    </span>
                  </div>
                }
                rules={[{ type: "string", warningOnly: true }]}
              >
                <Input placeholder="https://abcdef.io/item" />
              </Form.Item>

              <Form.Item
                name="collection"
                className="file-upload"
                label={
                  <div>
                    <label className="relative">
                      Collection <span className="text-[#FE3131]">*</span>
                    </label>
                    <span className="block text-[14px] font-[400]">
                      This is the collection where your item will appear.
                    </span>
                  </div>
                }
                required={true}
                rules={[
                  { required: true },
                  { type: "string", warningOnly: true },
                ]}
              >
                <Select
                  defaultValue="jack"
                  // onChange={handleChange}
                  options={[
                    { value: "jack", label: "Untitled Collection #1" },
                    { value: "lucy", label: "Lucy" },
                    { value: "Yiminghe", label: "yiminghe" },
                    { value: "disabled", label: "Disabled", disabled: true },
                  ]}
                />
              </Form.Item>

              <Form.Item
                name="description"
                label={
                  <div>
                    <label className="relative">Description</label>
                    <span className="block text-[14px] font-[400]">
                      The description will be included on the item&#39;s detail page
                      underneath its image. Markdown syntax is supported.
                    </span>
                  </div>
                }
                rules={[{ type: "string", warningOnly: true }]}
              >
                <TextArea
                  rows={4}
                  placeholder="Provide a detailed description of your item."
                />
              </Form.Item>

              <Form.Item
                name="properties"
                label="Properties"
                rules={[{ type: "string", warningOnly: true }]}
              >
                <Input placeholder="e.g. Size" />
              </Form.Item>

              <Form.Item
                name="royalties"
                label={
                  <div>
                    <label className="relative">Royalties</label>
                    <span className="block text-[14px] font-[400]">
                      Suggested: 0%, 10%, 20%, 30%. Maximum is 50%
                    </span>
                  </div>
                }
                rules={[{ type: "string", warningOnly: true }]}
              >
                <Input placeholder="Suggested: 0%, 10%, 20%, 30%. Maximum is 50%" />
              </Form.Item>

              <Form.Item name="blockchain" label="Blockchain">
                <Select
                  defaultValue="jack"
                  // onChange={handleChange}
                  options={[
                    { value: "jack", label: "Ethereum" },
                    { value: "lucy", label: "Lucy" },
                    { value: "Yiminghe", label: "yiminghe" },
                    { value: "disabled", label: "Disabled", disabled: true },
                  ]}
                />
              </Form.Item>

              <Form.Item>
                <Button type="primary" htmlType="submit">
                  Create NFT
                </Button>
              </Form.Item>
            </Form>
          </AppraisalRequestWrapper>
        </Content>
      </Layout>
    </>
  );
};

export default AppraisalRequest;
